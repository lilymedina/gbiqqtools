% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{lookup_type}
\alias{lookup_type}
\title{Interpret or find position in nodal type}
\usage{
lookup_type(model, condition = NULL, position = NULL)
}
\arguments{
\item{model}{A model object generated by \code{make_model()}.}

\item{condition}{A vector of strings specifying the child variable, followed by "|" (given) and the values of its parent variables in \code{model}.}

\item{position}{A named list of integers. The name is the name of the child variable in \code{model}, and its value a vector of digit positions in that variable's nodal type to be interpreted. See `Details`.}
}
\description{
Interprets the position of one or more digits (specified by \code{position}) in a nodal type. Alternatively returns nodal type digit positions that correspond to one or more given \code{condition}.
}
\details{
A node for a child variable X with \code{k} parents has a nodal type represented by X followed by \code{2^k} digits. Argument \code{position} allows user to interpret the meaning of one or more digit positions in any nodal type. For example \code{position = list(X = 1:3)} will return the interpretation of the first three digits in causal types for X. Argument \code{condition} allows users to query the digit position in the nodal type by providing instead the values of the parent variables of a given child. For example, \code{condition = "X | Z=0 & R=1"} returns the digit position that corresponds to values X takes when Z = 0 and R = 1.
}
\examples{
model <- make_model("R -> X; Z -> X; X -> Y")
#Example using digit position
lookup_type(model, position = list(X = c(3,4), Y = 1))
#Example using condition
lookup_type(model, condition = c("X | Z=0 & R=1", "X | Z=0 & R=0"))
#Return interpretation of all digit positions of all nodes
lookup_type(model)
}
